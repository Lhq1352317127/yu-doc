import{_ as i,C as n,c as e,o as p,G as t,a2 as l}from"./chunks/framework.BYJ_yxop.js";const b=JSON.parse('{"title":"31_1-对象的高级操作（待更新）","description":"","frontmatter":{"title":"31_1-对象的高级操作（待更新）","publish":false},"headers":[],"relativePath":"note/WEB/JavaScript/基础/31-对象的高级操作（待更新）.md","filePath":"note/WEB/JavaScript/基础/31-对象的高级操作（待更新）.md","lastUpdated":1757681940000}'),r={name:"note/WEB/JavaScript/基础/31-对象的高级操作（待更新）.md"};function h(k,s,c,d,o,E){const a=n("ArticleTopAd");return p(),e("div",null,[t(a),s[0]||(s[0]=l(`<h2 id="object-freeze-冻结对象" tabindex="-1">Object.freeze() 冻结对象 <a class="header-anchor" href="#object-freeze-冻结对象" aria-label="Permalink to &quot;Object.freeze() 冻结对象&quot;">​</a></h2><p>Object.freeze() 方法可以冻结一个对象。一个被冻结的对象再也不能被修改；冻结了一个对象则不能向这个对象添加新的属性，不能删除已有属性，不能修改该对象已有属性的可枚举性、可配置性、可写性，以及不能修改已有属性的值。此外，冻结一个对象后该对象的原型也不能被修改。freeze() 返回和传入的参数相同的对象。</p><p>代码举例：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qianguyihao&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    port: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;8899&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">freeze</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 冻结对象 params</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params.port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;8080&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改无效</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>上方代码中，把 params 对象冻结后，如果想再改变 params 里面的属性值，是无效的。</p>`,5))])}const g=i(r,[["render",h]]);export{b as __pageData,g as default};
