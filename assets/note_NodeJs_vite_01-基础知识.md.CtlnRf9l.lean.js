import{_ as a,c as i,o as n,a2 as e}from"./chunks/framework.BYJ_yxop.js";const o=JSON.parse('{"title":"Vite 基础认识与实战指南","description":"","frontmatter":{},"headers":[],"relativePath":"note/NodeJs/vite/01-基础知识.md","filePath":"note/NodeJs/vite/01-基础知识.md","lastUpdated":1757744560000}'),l={name:"note/NodeJs/vite/01-基础知识.md"};function p(t,s,h,r,k,d){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="vite-基础认识与实战指南" tabindex="-1">Vite 基础认识与实战指南 <a class="header-anchor" href="#vite-基础认识与实战指南" aria-label="Permalink to &quot;Vite 基础认识与实战指南&quot;">​</a></h1><h2 id="一、什么是-vite" tabindex="-1">一、什么是 Vite？ <a class="header-anchor" href="#一、什么是-vite" aria-label="Permalink to &quot;一、什么是 Vite？&quot;">​</a></h2><p>Vite（法语意为「快速」）是由 Vue 作者尤雨溪开发的前端构建工具，于 2020 年首次发布，旨在解决传统构建工具（如 Webpack）在开发环境下的性能瓶颈。</p><h3 id="核心特点" tabindex="-1">核心特点： <a class="header-anchor" href="#核心特点" aria-label="Permalink to &quot;核心特点：&quot;">​</a></h3><ul><li><strong>极速开发体验</strong>：基于浏览器原生 ES 模块（ESM），开发时无需打包（<code>no-bundle</code>），启动速度毫秒级，热更新（HMR）几乎无延迟。</li><li><strong>优化的构建过程</strong>：生产环境使用 Rollup 打包，兼顾速度与产物优化（Tree-shaking、代码分割等）。</li><li><strong>开箱即用</strong>：支持 TypeScript、JSX、CSS 预处理器（Sass/Less）等，无需复杂配置。</li><li><strong>灵活扩展</strong>：通过插件系统支持各种定制需求，兼容 Rollup 插件生态。</li></ul><h2 id="二、环境准备" tabindex="-1">二、环境准备 <a class="header-anchor" href="#二、环境准备" aria-label="Permalink to &quot;二、环境准备&quot;">​</a></h2><h3 id="_2-1-依赖要求" tabindex="-1">2.1 依赖要求 <a class="header-anchor" href="#_2-1-依赖要求" aria-label="Permalink to &quot;2.1 依赖要求&quot;">​</a></h3><p>Vite 依赖 Node.js 环境，要求：</p><ul><li>Node.js 版本 ≥ 14.18.0（推荐使用 LTS 版本，如 18.x 或 20.x）。</li></ul><p>检查 Node.js 版本：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 输出 v18.18.0 或更高版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # npm 通常随 Node.js 内置</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-2-安装-vite" tabindex="-1">2.2 安装 Vite <a class="header-anchor" href="#_2-2-安装-vite" aria-label="Permalink to &quot;2.2 安装 Vite&quot;">​</a></h3><p>无需单独全局安装 Vite，推荐通过官方脚手架 <code>create-vite</code> 快速创建项目（会自动安装对应版本的 Vite）。</p><h2 id="三、快速创建-vite-项目" tabindex="-1">三、快速创建 Vite 项目 <a class="header-anchor" href="#三、快速创建-vite-项目" aria-label="Permalink to &quot;三、快速创建 Vite 项目&quot;">​</a></h2><h3 id="_3-1-初始化项目" tabindex="-1">3.1 初始化项目 <a class="header-anchor" href="#_3-1-初始化项目" aria-label="Permalink to &quot;3.1 初始化项目&quot;">​</a></h3><p>使用 npm、yarn 或 pnpm 运行 <code>create-vite</code>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_3-2-项目配置步骤" tabindex="-1">3.2 项目配置步骤 <a class="header-anchor" href="#_3-2-项目配置步骤" aria-label="Permalink to &quot;3.2 项目配置步骤&quot;">​</a></h3><p>执行命令后，按提示完成配置：</p><ol><li>输入项目名称（如 <code>vite-demo</code>）。</li><li>选择框架：支持 <code>Vanilla</code>（原生 JS）、<code>Vue</code>、<code>React</code>、<code>Preact</code>、<code>Svelte</code> 等。</li><li>选择变体（如 Vue 可选择 <code>JavaScript</code> 或 <code>TypeScript</code>）。</li></ol><p>示例流程：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">√</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite-demo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">√</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Select</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> framework:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">√</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Select</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variant:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> »</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Vue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-3-启动项目" tabindex="-1">3.3 启动项目 <a class="header-anchor" href="#_3-3-启动项目" aria-label="Permalink to &quot;3.3 启动项目&quot;">​</a></h3><p>进入项目目录，安装依赖并启动开发服务器：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite-demo</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 进入项目目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 安装依赖（或 yarn / pnpm install）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 启动开发服务器</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>启动成功后，终端会显示访问地址（默认 <code>http://localhost:5173</code>），打开浏览器即可看到项目页面。</p><h2 id="四、vite-基本使用" tabindex="-1">四、Vite 基本使用 <a class="header-anchor" href="#四、vite-基本使用" aria-label="Permalink to &quot;四、Vite 基本使用&quot;">​</a></h2><h3 id="_4-1-核心命令" tabindex="-1">4.1 核心命令 <a class="header-anchor" href="#_4-1-核心命令" aria-label="Permalink to &quot;4.1 核心命令&quot;">​</a></h3><p>Vite 项目的 <code>package.json</code> 中默认包含 3 个核心脚本：</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>npm run dev</code></td><td>启动开发服务器（默认端口 5173），支持热更新。</td></tr><tr><td><code>npm run build</code></td><td>构建生产环境产物（输出到 <code>dist</code> 目录）。</td></tr><tr><td><code>npm run preview</code></td><td>本地预览生产环境构建产物（需先执行 <code>build</code>）。</td></tr></tbody></table><h4 id="常用参数" tabindex="-1">常用参数： <a class="header-anchor" href="#常用参数" aria-label="Permalink to &quot;常用参数：&quot;">​</a></h4><ul><li>开发服务器指定端口：<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 端口改为 3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li>允许外部访问（如同一局域网内其他设备）：<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0.0.0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 绑定所有网络接口</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li>生产构建开启源码映射（方便调试）：<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sourcemap</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 生成 .map 文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><h3 id="_4-2-项目目录结构" tabindex="-1">4.2 项目目录结构 <a class="header-anchor" href="#_4-2-项目目录结构" aria-label="Permalink to &quot;4.2 项目目录结构&quot;">​</a></h3><p>以 Vue 项目为例，默认结构如下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>vite-demo/</span></span>
<span class="line"><span>├── node_modules/      # 依赖包</span></span>
<span class="line"><span>├── public/            # 静态资源（直接复制到 dist 根目录）</span></span>
<span class="line"><span>│   └── favicon.ico</span></span>
<span class="line"><span>├── src/               # 源代码</span></span>
<span class="line"><span>│   ├── assets/        # 资源文件（图片、样式等）</span></span>
<span class="line"><span>│   ├── components/    # 组件</span></span>
<span class="line"><span>│   ├── App.vue        # 根组件</span></span>
<span class="line"><span>│   ├── main.js        # 入口文件</span></span>
<span class="line"><span>│   └── style.css      # 全局样式</span></span>
<span class="line"><span>├── .gitignore         # Git 忽略配置</span></span>
<span class="line"><span>├── index.html         # 入口 HTML（Vite 特殊处理）</span></span>
<span class="line"><span>├── package.json       # 项目配置</span></span>
<span class="line"><span>├── vite.config.js     # Vite 配置文件（核心）</span></span>
<span class="line"><span>└── README.md</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>注意</strong>：Vite 以 <code>index.html</code> 为入口（而非 JS 文件），通过 <code>&lt;script type=&quot;module&quot;&gt;</code> 加载 ESM 模块。</p><h2 id="五、vite-核心配置-vite-config-js" tabindex="-1">五、Vite 核心配置（vite.config.js） <a class="header-anchor" href="#五、vite-核心配置-vite-config-js" aria-label="Permalink to &quot;五、Vite 核心配置（vite.config.js）&quot;">​</a></h2><p>Vite 的配置文件为项目根目录下的 <code>vite.config.js</code>（或 <code>.ts</code>），采用 ESM 语法。基础结构如下：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vite.config.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 配置选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_5-1-常用配置项" tabindex="-1">5.1 常用配置项 <a class="header-anchor" href="#_5-1-常用配置项" aria-label="Permalink to &quot;5.1 常用配置项&quot;">​</a></h3><h4 id="_5-1-1-项目基础配置" tabindex="-1">5.1.1 项目基础配置 <a class="header-anchor" href="#_5-1-1-项目基础配置" aria-label="Permalink to &quot;5.1.1 项目基础配置&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  base: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/vite-demo/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 部署基础路径（默认 &#39;/&#39;，如部署到子路径需修改）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  root: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./src&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 项目根目录（默认当前目录）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  envDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./env&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 环境变量文件目录（默认项目根目录）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_5-1-2-开发服务器配置-server" tabindex="-1">5.1.2 开发服务器配置（server） <a class="header-anchor" href="#_5-1-2-开发服务器配置-server" aria-label="Permalink to &quot;5.1.2 开发服务器配置（server）&quot;">​</a></h4><p>用于配置开发环境的服务器行为：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  server: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 开发服务器端口（默认 5173）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 启动后自动打开浏览器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    host: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0.0.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 允许外部访问</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strictPort: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 端口被占用时直接退出（而非自动换端口）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    proxy: {                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 接口代理（解决跨域）</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;/api&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        target: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://localhost:8080&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 目标接口地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        changeOrigin: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 跨域时修改 Origin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        rewrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#85E89D;--shiki-dark-font-weight:bold;">\\/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">api</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 去除路径中的 /api</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="_5-1-3-构建配置-build" tabindex="-1">5.1.3 构建配置（build） <a class="header-anchor" href="#_5-1-3-构建配置-build" aria-label="Permalink to &quot;5.1.3 构建配置（build）&quot;">​</a></h4><p>用于配置生产环境构建行为：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  build: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    outDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dist&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出目录（默认 &#39;dist&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    assetsDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;assets&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 静态资源目录（默认 &#39;assets&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sourcemap: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成源码映射（默认 false，调试用）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    minify: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;terser&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 压缩工具（&#39;esbuild&#39; 更快，&#39;terser&#39; 压缩率更高）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    target: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es2015&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 目标浏览器兼容（默认 &#39;modules&#39;）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rollupOptions: {           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 传递给 Rollup 的配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      output: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 配置代码分割（如将第三方库单独打包）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        manualChunks: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          vendor: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="_5-1-4-解析配置-resolve" tabindex="-1">5.1.4 解析配置（resolve） <a class="header-anchor" href="#_5-1-4-解析配置-resolve" aria-label="Permalink to &quot;5.1.4 解析配置（resolve）&quot;">​</a></h4><p>用于配置模块解析规则：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  resolve: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias: {                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 路径别名（简化导入）</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;@&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/src&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如 import xxx from &#39;@/components&#39; 对应 src/components</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;components&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/src/components&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    extensions: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 省略文件后缀时的解析顺序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>使用别名注意</strong>：如果使用 TypeScript，需在 <code>tsconfig.json</code> 中同步配置 <code>paths</code>，否则 TS 会报错。</p><h4 id="_5-1-5-css-配置" tabindex="-1">5.1.5 CSS 配置 <a class="header-anchor" href="#_5-1-5-css-配置" aria-label="Permalink to &quot;5.1.5 CSS 配置&quot;">​</a></h4><p>支持 CSS 预处理器、模块、PostCSS 等：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  css: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    preprocessorOptions: {     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CSS 预处理器配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scss: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        additionalData: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`@import &quot;@/styles/variables.scss&quot;;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 全局注入 SCSS 变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modules: {                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CSS Modules 配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      generateScopedName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[name]__[local]__[hash:base64:5]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 类名生成规则</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    devSourcemap: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 开发环境生成 CSS SourceMap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_5-1-6-插件配置-plugins" tabindex="-1">5.1.6 插件配置（plugins） <a class="header-anchor" href="#_5-1-6-插件配置-plugins" aria-label="Permalink to &quot;5.1.6 插件配置（plugins）&quot;">​</a></h4><p>Vite 通过插件扩展功能，常用官方插件：</p><ul><li><code>@vitejs/plugin-vue</code>：支持 Vue 单文件组件（SFC）。</li><li><code>@vitejs/plugin-react</code>：支持 React（JSX/TSX）。</li><li><code>vite-plugin-pwa</code>：实现 PWA 功能。</li></ul><p>示例（Vue 项目配置）：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vitejs/plugin-vue&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 导入 Vue 插件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册插件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="六、环境变量管理" tabindex="-1">六、环境变量管理 <a class="header-anchor" href="#六、环境变量管理" aria-label="Permalink to &quot;六、环境变量管理&quot;">​</a></h2><p>Vite 支持通过 <code>.env</code> 文件定义环境变量，默认只暴露以 <code>VITE_</code> 为前缀的变量。</p><h3 id="_6-1-常用环境文件" tabindex="-1">6.1 常用环境文件 <a class="header-anchor" href="#_6-1-常用环境文件" aria-label="Permalink to &quot;6.1 常用环境文件&quot;">​</a></h3><table><thead><tr><th>文件名</th><th>作用</th></tr></thead><tbody><tr><td><code>.env</code></td><td>所有环境通用</td></tr><tr><td><code>.env.development</code></td><td>开发环境（<code>npm run dev</code>）</td></tr><tr><td><code>.env.production</code></td><td>生产环境（<code>npm run build</code>）</td></tr><tr><td><code>.env.test</code></td><td>测试环境</td></tr></tbody></table><h3 id="_6-2-使用方法" tabindex="-1">6.2 使用方法 <a class="header-anchor" href="#_6-2-使用方法" aria-label="Permalink to &quot;6.2 使用方法&quot;">​</a></h3><ol><li><p>创建 <code>.env.development</code> 文件：</p><div class="language-env vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># .env.development</span></span>
<span class="line"><span>VITE_API_BASE_URL = &#39;http://localhost:8080/api&#39;</span></span>
<span class="line"><span>VITE_APP_TITLE = &#39;开发环境&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>在代码中访问：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/main.js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_API_BASE_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 http://localhost:8080/api</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_APP_TITLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 开发环境</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>在 HTML 中访问：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- index.html --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;%VITE_APP_TITLE%&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 输出 开发环境 --&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h2 id="七、热模块替换-hmr" tabindex="-1">七、热模块替换（HMR） <a class="header-anchor" href="#七、热模块替换-hmr" aria-label="Permalink to &quot;七、热模块替换（HMR）&quot;">​</a></h2><p>Vite 内置高效的 HMR 机制，修改代码后无需刷新页面即可更新，且能保留组件状态。</p><h3 id="_7-1-框架自动支持" tabindex="-1">7.1 框架自动支持 <a class="header-anchor" href="#_7-1-框架自动支持" aria-label="Permalink to &quot;7.1 框架自动支持&quot;">​</a></h3><ul><li>Vue、React 等框架通过官方插件（<code>@vitejs/plugin-vue</code>、<code>@vitejs/plugin-react</code>）自动支持 HMR，无需额外配置。</li></ul><h3 id="_7-2-原生-js-中使用-hmr" tabindex="-1">7.2 原生 JS 中使用 HMR <a class="header-anchor" href="#_7-2-原生-js-中使用-hmr" aria-label="Permalink to &quot;7.2 原生 JS 中使用 HMR&quot;">​</a></h3><p>原生项目中可手动监听模块更新：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/counter.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> increment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听模块自身更新</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.hot) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.hot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (newModule) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newModule.count;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 保留状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="八、常见问题与解决方案" tabindex="-1">八、常见问题与解决方案 <a class="header-anchor" href="#八、常见问题与解决方案" aria-label="Permalink to &quot;八、常见问题与解决方案&quot;">​</a></h2><ol><li><p><strong>端口被占用</strong>：<br> 启动时提示 <code>EADDRINUSE: address already in use</code>，可通过 <code>--port</code> 指定新端口：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3001</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>跨域问题</strong>：<br> 开发环境调用接口跨域，通过 <code>server.proxy</code> 配置代理（见 5.1.2 节）。</p></li><li><p><strong>生产环境路径错误</strong>：<br> 部署到子路径（如 <code>https://xxx.com/app/</code>）时，需配置 <code>base: &#39;/app/&#39;</code>（见 5.1.1 节）。</p></li><li><p><strong>TypeScript 别名报错</strong>：<br> 在 <code>tsconfig.json</code> 中同步配置 <code>paths</code>：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;paths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;@/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ol><h2 id="九、学习资源" tabindex="-1">九、学习资源 <a class="header-anchor" href="#九、学习资源" aria-label="Permalink to &quot;九、学习资源&quot;">​</a></h2><ul><li><strong>官方文档</strong>：<a href="https://vitejs.dev/guide/" target="_blank" rel="noreferrer">Vite 官方指南</a>（最权威、更新及时）。</li><li><strong>插件生态</strong>：<a href="https://vitejs.dev/plugins/" target="_blank" rel="noreferrer">Vite 插件列表</a>。</li><li><strong>实战项目</strong>：通过官方模板（<code>create-vite</code> 提供的框架模板）练习，逐步扩展功能。</li></ul><h2 id="十、总结" tabindex="-1">十、总结 <a class="header-anchor" href="#十、总结" aria-label="Permalink to &quot;十、总结&quot;">​</a></h2><p>Vite 凭借 <code>no-bundle</code> 开发模式和优化的构建流程，彻底改变了前端开发体验。其核心优势在于<strong>快</strong>：快速启动、快速热更新、快速构建。</p><p>对于初学者，建议从官方模板入手，熟悉基础命令和配置后，再通过插件扩展功能。无论是小型项目还是大型应用，Vite 都能显著提升开发效率，是现代前端工程化的优选工具。</p>`,80)])])}const E=a(l,[["render",p]]);export{o as __pageData,E as default};
