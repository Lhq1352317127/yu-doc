import{_ as e,c as a,o as l,a2 as o}from"./chunks/framework.BYJ_yxop.js";const x=JSON.parse('{"title":"函数: watchTextChange()","description":"","frontmatter":{},"headers":[],"relativePath":"src/functions/watchTextChange.md","filePath":"src/functions/watchTextChange.md","lastUpdated":null}'),c={name:"src/functions/watchTextChange.md"};function n(d,t,r,h,s,i){return l(),a("div",null,[...t[0]||(t[0]=[o('<p><strong>vitepress-doc</strong> • <a href="./../README.html">API</a></p><hr><h1 id="函数-watchtextchange" tabindex="-1">函数: watchTextChange() <a class="header-anchor" href="#函数-watchtextchange" aria-label="Permalink to &quot;函数: watchTextChange()&quot;">​</a></h1><p><a id="undefined" name="undefined"></a></p><blockquote><p><strong>watchTextChange</strong>(<code>selector</code>, <code>callback</code>): <code>any</code></p></blockquote><p>监听DOM元素文本内容变化的工具函数，返回包含「开始监听」和「停止监听」方法的对象</p><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>selector</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">DOM选择器字符串（如 &quot;.target-class&quot;）或具体的HTMLElement元素</td></tr><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">文本变化时的回调函数</td></tr></tbody></table><h2 id="返回值类型" tabindex="-1">返回值类型 <a class="header-anchor" href="#返回值类型" aria-label="Permalink to &quot;返回值类型&quot;">​</a></h2><p><code>any</code></p><p>包含以下方法的实例对象：</p><ul><li><code>watchStartTextChange()</code>: 开始监听文本变化</li><li><code>unwatchTextChange()</code>: 停止监听文本变化</li></ul><h2 id="查看源码" tabindex="-1">查看源码 <a class="header-anchor" href="#查看源码" aria-label="Permalink to &quot;查看源码&quot;">​</a></h2><p>src/native/tool.ts:13</p>',14)])])}const f=e(c,[["render",n]]);export{x as __pageData,f as default};
