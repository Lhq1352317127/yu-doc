import{_ as a,c as i,o as n,a2 as e}from"./chunks/framework.BYJ_yxop.js";const o=JSON.parse('{"title":"Git 学习笔记整理","description":"","frontmatter":{},"headers":[],"relativePath":"note/WEB/TOOL/02-1Git的深度使用.md","filePath":"note/WEB/TOOL/02-1Git的深度使用.md","lastUpdated":null}'),l={name:"note/WEB/TOOL/02-1Git的深度使用.md"};function t(h,s,p,r,k,d){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="git-学习笔记整理" tabindex="-1">Git 学习笔记整理 <a class="header-anchor" href="#git-学习笔记整理" aria-label="Permalink to &quot;Git 学习笔记整理&quot;">​</a></h1><h2 id="一、版本控制简介" tabindex="-1">一、版本控制简介 <a class="header-anchor" href="#一、版本控制简介" aria-label="Permalink to &quot;一、版本控制简介&quot;">​</a></h2><h3 id="集中式版本控制-svn" tabindex="-1">集中式版本控制（SVN） <a class="header-anchor" href="#集中式版本控制-svn" aria-label="Permalink to &quot;集中式版本控制（SVN）&quot;">​</a></h3><ul><li>特点：每次存储的是文件差异，占用硬盘空间较小，但回滚速度慢。</li><li>优点：代码存放在单一服务器，便于项目管理。</li><li>缺点：服务器宕机时，员工代码无法保障；服务器故障可能导致整个项目历史记录丢失。</li></ul><h3 id="分布式版本控制-git" tabindex="-1">分布式版本控制（Git） <a class="header-anchor" href="#分布式版本控制-git" aria-label="Permalink to &quot;分布式版本控制（Git）&quot;">​</a></h3><ul><li>特点：每次存储项目的完整快照，理论上占用空间较大，但Git团队做了极致压缩，实际空间与SVN相差不大，且回滚速度极快。</li><li>优点：完全分布式，本地可保存完整历史记录，无需依赖中央服务器。</li><li>缺点：学习曲线比SVN陡峭。</li></ul><h2 id="二、git-安装与初始化配置" tabindex="-1">二、Git 安装与初始化配置 <a class="header-anchor" href="#二、git-安装与初始化配置" aria-label="Permalink to &quot;二、Git 安装与初始化配置&quot;">​</a></h2><h3 id="安装验证" tabindex="-1">安装验证 <a class="header-anchor" href="#安装验证" aria-label="Permalink to &quot;安装验证&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看Git版本，验证是否安装成功</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="初始化配置" tabindex="-1">初始化配置 <a class="header-anchor" href="#初始化配置" aria-label="Permalink to &quot;初始化配置&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;用户名&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 配置全局用户名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;邮箱地址&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 配置全局邮箱</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看当前配置信息</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="初始化仓库" tabindex="-1">初始化仓库 <a class="header-anchor" href="#初始化仓库" aria-label="Permalink to &quot;初始化仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 在当前目录初始化Git仓库（生成.git目录）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="三、git-底层命令" tabindex="-1">三、Git 底层命令 <a class="header-anchor" href="#三、git-底层命令" aria-label="Permalink to &quot;三、Git 底层命令&quot;">​</a></h2><p>Git 底层通过对象（git对象、tree对象、commit对象）管理版本，以下是核心底层操作：</p><h3 id="_1-git对象-文件内容快照" tabindex="-1">1. git对象（文件内容快照） <a class="header-anchor" href="#_1-git对象-文件内容快照" aria-label="Permalink to &quot;1. git对象（文件内容快照）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hash-object</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件路径</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 生成文件的哈希值（key），并将压缩后的文件内容（val）存储到.git/objects</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-tree对象-文件与目录结构" tabindex="-1">2. tree对象（文件与目录结构） <a class="header-anchor" href="#_2-tree对象-文件与目录结构" aria-label="Permalink to &quot;2. tree对象（文件与目录结构）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 往暂存区添加记录（关联git对象与文件名），存储到.git/index</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cacheinfo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100644</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 哈希值</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write-tree</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 生成树对象，存储到.git/objects（记录目录结构和文件关联）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-commit对象-提交记录" tabindex="-1">3. commit对象（提交记录） <a class="header-anchor" href="#_3-commit对象-提交记录" aria-label="Permalink to &quot;3. commit对象（提交记录）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;提交信息&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit-tree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tree哈希值</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 生成提交对象，存储到.git/objects（关联tree对象、作者、时间等）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-对象查询" tabindex="-1">4. 对象查询 <a class="header-anchor" href="#_4-对象查询" aria-label="Permalink to &quot;4. 对象查询&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat-file</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 哈希值</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看对应对象的内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat-file</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 哈希值</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看对应对象的类型（blob/tree/commit）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_5-查看暂存区" tabindex="-1">5. 查看暂存区 <a class="header-anchor" href="#_5-查看暂存区" aria-label="Permalink to &quot;5. 查看暂存区&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls-files</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看暂存区的文件记录</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="四、git-高层命令-基础操作" tabindex="-1">四、Git 高层命令（基础操作） <a class="header-anchor" href="#四、git-高层命令-基础操作" aria-label="Permalink to &quot;四、Git 高层命令（基础操作）&quot;">​</a></h2><p>高层命令封装了底层操作，简化使用流程，核心是对文件的CRUD（增删改查）。</p><h3 id="_1-新增文件-c" tabindex="-1">1. 新增文件（C） <a class="header-anchor" href="#_1-新增文件-c" aria-label="Permalink to &quot;1. 新增文件（C）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在工作目录创建新文件后执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看文件状态（此时为未跟踪）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将工作目录所有修改添加到暂存区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;提交信息&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将暂存区内容提交到版本库</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-修改文件-u" tabindex="-1">2. 修改文件（U） <a class="header-anchor" href="#_2-修改文件-u" aria-label="Permalink to &quot;2. 修改文件（U）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在工作目录修改已有文件后执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看文件状态（此时为已修改）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将修改添加到暂存区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;提交信息&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 提交到版本库</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-删除与重命名-d" tabindex="-1">3. 删除与重命名（D） <a class="header-anchor" href="#_3-删除与重命名-d" aria-label="Permalink to &quot;3. 删除与重命名（D）&quot;">​</a></h3><h4 id="删除文件" tabindex="-1">删除文件 <a class="header-anchor" href="#删除文件" aria-label="Permalink to &quot;删除文件&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 要删除的文件</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 删除工作目录文件并添加到暂存区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;提交信息&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 提交删除操作</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="重命名文件" tabindex="-1">重命名文件 <a class="header-anchor" href="#重命名文件" aria-label="Permalink to &quot;重命名文件&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 原文件名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 新文件名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 重命名工作目录文件并添加到暂存区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;提交信息&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 提交重命名操作</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4-查询操作-r" tabindex="-1">4. 查询操作（R） <a class="header-anchor" href="#_4-查询操作-r" aria-label="Permalink to &quot;4. 查询操作（R）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看文件状态（已跟踪：已提交/已暂存/已修改；未跟踪）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diff</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看未暂存的修改内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diff</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cache</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看已暂存但未提交的修改内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --oneline</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 以简洁格式查看提交记录</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="五、git-分支操作" tabindex="-1">五、Git 分支操作 <a class="header-anchor" href="#五、git-分支操作" aria-label="Permalink to &quot;五、Git 分支操作&quot;">​</a></h2><p>分支本质是一个提交对象，HEAD指针默认指向当前分支，提交时HEAD会携带分支向前移动。</p><h3 id="_1-分支核心命令" tabindex="-1">1. 分支核心命令 <a class="header-anchor" href="#_1-分支核心命令" aria-label="Permalink to &quot;1. 分支核心命令&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看分支列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看分支指向的最新提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 在当前提交创建新分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 提交哈希值</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 在指定提交创建新分支（版本穿梭）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 切换分支（HEAD指向目标分支）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 创建并切换到新分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 删除已合并的分支（空分支）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 强制删除未合并的分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --oneline</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --decorate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --graph</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看项目分支图（含合并历史）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2-分支合并" tabindex="-1">2. 分支合并 <a class="header-anchor" href="#_2-分支合并" aria-label="Permalink to &quot;2. 分支合并&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将目标分支合并到当前分支</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 合并类型：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - 快进合并：无冲突，直接移动指针</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - 典型合并：可能产生冲突，需手动解决（修改冲突文件 → git add → git commit）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-分支查看与清理" tabindex="-1">3. 分支查看与清理 <a class="header-anchor" href="#_3-分支查看与清理" aria-label="Permalink to &quot;3. 分支查看与清理&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --merged</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看已合并到当前分支的分支（可删除）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-merged</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看未合并到当前分支的分支（需评估是否合并）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_4-分支操作注意事项" tabindex="-1">4. 分支操作注意事项 <a class="header-anchor" href="#_4-分支操作注意事项" aria-label="Permalink to &quot;4. 分支操作注意事项&quot;">​</a></h3><ul><li>切换分支前，确保当前分支是“干净的”（所有修改已提交），避免污染其他分支。</li><li>允许切换的情况：分支内容已提交；未跟踪/首次暂存的新文件（不推荐）。</li><li>不允许切换的情况：分支有已修改但未暂存的内容，或二次暂存未提交的内容。</li></ul><h3 id="_5-工作存储-stash" tabindex="-1">5. 工作存储（stash） <a class="header-anchor" href="#_5-工作存储-stash" aria-label="Permalink to &quot;5. 工作存储（stash）&quot;">​</a></h3><p>当分支工作未完成需切换时，可暂存当前工作：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将当前分支工作推到栈中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看存储的工作列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 还原栈顶工作（不删除栈顶）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> drop</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 删除栈顶工作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pop</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 还原并删除栈顶工作（apply + drop）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="六、撤回操作-后悔药" tabindex="-1">六、撤回操作（后悔药） <a class="header-anchor" href="#六、撤回操作-后悔药" aria-label="Permalink to &quot;六、撤回操作（后悔药）&quot;">​</a></h2><h3 id="_1-撤回工作目录修改" tabindex="-1">1. 撤回工作目录修改 <a class="header-anchor" href="#_1-撤回工作目录修改" aria-label="Permalink to &quot;1. 撤回工作目录修改&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用暂存区内容覆盖工作目录（未暂存的修改丢失）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-撤回暂存区修改" tabindex="-1">2. 撤回暂存区修改 <a class="header-anchor" href="#_2-撤回暂存区修改" aria-label="Permalink to &quot;2. 撤回暂存区修改&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将暂存区的修改撤回到工作目录（暂存区内容丢失）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-撤回版本库提交" tabindex="-1">3. 撤回版本库提交 <a class="header-anchor" href="#_3-撤回版本库提交" aria-label="Permalink to &quot;3. 撤回版本库提交&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --amend</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 修正最近一次提交（如修改注释，或补充未提交的暂存内容）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="七、reset-与-checkout-深入理解" tabindex="-1">七、reset 与 checkout 深入理解 <a class="header-anchor" href="#七、reset-与-checkout-深入理解" aria-label="Permalink to &quot;七、reset 与 checkout 深入理解&quot;">​</a></h2><h3 id="_1-reset-三部曲-重置版本" tabindex="-1">1. reset 三部曲（重置版本） <a class="header-anchor" href="#_1-reset-三部曲-重置版本" aria-label="Permalink to &quot;1. reset 三部曲（重置版本）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 仅重置HEAD（分支指针），暂存区和工作目录不变</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --soft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 提交哈希值/HEAD~（HEAD~表示上一个提交）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重置HEAD和暂存区，工作目录不变（默认行为）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--mixed] 提交哈希值/HEAD~</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重置HEAD、暂存区和工作目录（工作目录内容被强制覆盖，谨慎使用）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 提交哈希值/HEAD~</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_2-路径-reset-针对单个文件" tabindex="-1">2. 路径 reset（针对单个文件） <a class="header-anchor" href="#_2-路径-reset-针对单个文件" aria-label="Permalink to &quot;2. 路径 reset（针对单个文件）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 仅重置暂存区（用指定提交的文件内容覆盖暂存区，跳过HEAD重置）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--mixed] 提交哈希值 文件名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-checkout-操作" tabindex="-1">3. checkout 操作 <a class="header-anchor" href="#_3-checkout-操作" aria-label="Permalink to &quot;3. checkout 操作&quot;">​</a></h3><h4 id="切换分支-版本" tabindex="-1">切换分支/版本 <a class="header-anchor" href="#切换分支-版本" aria-label="Permalink to &quot;切换分支/版本&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 分支名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 切换分支（重置HEAD到目标分支，同步暂存区和工作目录，安全覆盖）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 提交哈希值</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 切换到指定版本（HEAD指向该提交，不关联分支，即“分离头指针”）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="针对文件的-checkout" tabindex="-1">针对文件的 checkout <a class="header-anchor" href="#针对文件的-checkout" aria-label="Permalink to &quot;针对文件的 checkout&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用暂存区内容覆盖工作目录（同“撤回工作目录修改”）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用指定提交的文件内容覆盖暂存区和工作目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 提交哈希值</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="与-reset-hard-的区别" tabindex="-1">与 reset --hard 的区别 <a class="header-anchor" href="#与-reset-hard-的区别" aria-label="Permalink to &quot;与 reset --hard 的区别&quot;">​</a></h4><ul><li>checkout 切换分支时，HEAD 指向新分支，不带动原分支；reset --hard 带动当前分支移动。</li><li>checkout 对工作目录是安全覆盖（仅修改差异）；reset --hard 是强制覆盖。</li></ul><h2 id="八、远程协作" tabindex="-1">八、远程协作 <a class="header-anchor" href="#八、远程协作" aria-label="Permalink to &quot;八、远程协作&quot;">​</a></h2><h3 id="_1-核心概念" tabindex="-1">1. 核心概念 <a class="header-anchor" href="#_1-核心概念" aria-label="Permalink to &quot;1. 核心概念&quot;">​</a></h3><ul><li>本地分支：本地创建的分支。</li><li>远程跟踪分支（remote/分支名）：本地记录的远程分支状态。</li><li>远程分支：存储在远程仓库的分支。</li></ul><h3 id="_2-协作基本流程" tabindex="-1">2. 协作基本流程 <a class="header-anchor" href="#_2-协作基本流程" aria-label="Permalink to &quot;2. 协作基本流程&quot;">​</a></h3><ol><li>项目经理创建远程仓库（如GitHub/GitLab）。</li><li>项目经理初始化本地仓库，配置用户名/邮箱，提交初始代码。</li><li>关联远程仓库（配置别名，如<code>origin</code>）。</li><li>项目经理推送本地分支到远程：<code>git push</code>。</li><li>邀请成员协作，成员克隆远程仓库：<code>git clone 仓库地址</code>。</li><li>成员修改代码后，推送修改：<code>git push</code>。</li><li>项目经理拉取成员修改：<code>git pull</code>。</li></ol><h3 id="_3-分支跟踪" tabindex="-1">3. 分支跟踪 <a class="header-anchor" href="#_3-分支跟踪" aria-label="Permalink to &quot;3. 分支跟踪&quot;">​</a></h3><ul><li>克隆仓库时，默认跟踪<code>master</code>（或<code>main</code>）分支。</li><li>本地无分支时跟踪远程分支：<code>git checkout --track 远程跟踪分支（如origin/develop）</code>。</li><li>本地已有分支时关联远程分支：<code>git branch -u 远程跟踪分支</code>。</li></ul><h3 id="_4-常用命令" tabindex="-1">4. 常用命令 <a class="header-anchor" href="#_4-常用命令" aria-label="Permalink to &quot;4. 常用命令&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 推送本地分支到远程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 拉取远程分支并合并到本地当前分支（等效于git fetch + git merge）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 获取远程最新状态（更新远程跟踪分支，不合并）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_5-第三方协作-pull-request" tabindex="-1">5. 第三方协作（Pull Request） <a class="header-anchor" href="#_5-第三方协作-pull-request" aria-label="Permalink to &quot;5. 第三方协作（Pull Request）&quot;">​</a></h3><ul><li>第三方通过<code>fork</code>复制远程仓库到自己账户，修改后提交<code>Pull Request</code>，由项目方审核合并。</li></ul><h2 id="九、-gitignore-配置" tabindex="-1">九、.gitignore 配置 <a class="header-anchor" href="#九、-gitignore-配置" aria-label="Permalink to &quot;九、.gitignore 配置&quot;">​</a></h2><p>用于指定Git忽略跟踪的文件（如依赖、日志、编辑器配置等），示例：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 系统文件</span></span>
<span class="line"><span>.DS_Store</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 依赖目录</span></span>
<span class="line"><span>node_modules/</span></span>
<span class="line"><span>/dist/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 日志文件</span></span>
<span class="line"><span>npm-debug.log*</span></span>
<span class="line"><span>yarn-debug.log*</span></span>
<span class="line"><span>yarn-error.log*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 编辑器文件</span></span>
<span class="line"><span>.idea</span></span>
<span class="line"><span>.vscode</span></span>
<span class="line"><span>*.suo</span></span>
<span class="line"><span>*.ntvs*</span></span>
<span class="line"><span>*.njsproj</span></span>
<span class="line"><span>*.sln</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="十、eslint-与-git-结合" tabindex="-1">十、ESLint 与 Git 结合 <a class="header-anchor" href="#十、eslint-与-git-结合" aria-label="Permalink to &quot;十、ESLint 与 Git 结合&quot;">​</a></h2><h3 id="_1-eslint-基础" tabindex="-1">1. ESLint 基础 <a class="header-anchor" href="#_1-eslint-基础" aria-label="Permalink to &quot;1. ESLint 基础&quot;">​</a></h3><ul><li>功能：JavaScript代码检查工具（如规范引号、分号等）。</li><li>安装：<code>npm i eslint -D</code>。</li><li>使用：<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 生成配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 目录名</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 检查指定目录代码</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h3 id="_2-结合-husky-git钩子" tabindex="-1">2. 结合 Husky（Git钩子） <a class="header-anchor" href="#_2-结合-husky-git钩子" aria-label="Permalink to &quot;2. 结合 Husky（Git钩子）&quot;">​</a></h3><p>Husky可在Git操作（如commit）前执行检查，确保代码规范：</p><ol><li>安装 Husky：<code>npm i husky -D</code>。</li><li>在<code>package.json</code>配置钩子：<div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;husky&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;hooks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;pre-commit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npm run lint&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  #</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> commit前执行lint检查，通过才允许提交</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol><h2 id="常用命令总结" tabindex="-1">常用命令总结 <a class="header-anchor" href="#常用命令总结" aria-label="Permalink to &quot;常用命令总结&quot;">​</a></h2><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>状态查看</td><td><code>git status</code></td></tr><tr><td>添加暂存</td><td><code>git add 路径</code></td></tr><tr><td>提交版本</td><td><code>git commit -m &quot;信息&quot;</code></td></tr><tr><td>推送远程</td><td><code>git push</code></td></tr><tr><td>拉取远程</td><td><code>git pull</code></td></tr><tr><td>分支列表</td><td><code>git branch</code></td></tr><tr><td>创建分支</td><td><code>git branch 分支名</code></td></tr><tr><td>切换分支</td><td><code>git checkout 分支名</code></td></tr><tr><td>合并分支</td><td><code>git merge 分支名</code></td></tr><tr><td>查看提交记录</td><td><code>git log --oneline</code></td></tr><tr><td>撤回工作目录修改</td><td><code>git checkout -- 文件名</code></td></tr><tr><td>撤回暂存区修改</td><td><code>git reset HEAD 文件名</code></td></tr><tr><td>强制重置版本（谨慎）</td><td><code>git reset --hard 提交哈希值</code></td></tr></tbody></table>`,92)])])}const g=a(l,[["render",t]]);export{o as __pageData,g as default};
