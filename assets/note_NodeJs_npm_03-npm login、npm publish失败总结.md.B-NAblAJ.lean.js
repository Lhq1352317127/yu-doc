import{_ as a,c as i,o as n,a2 as e}from"./chunks/framework.BYJ_yxop.js";const k=JSON.parse('{"title":"npm login/publish 失败问题总结与解决方案","description":"","frontmatter":{},"headers":[],"relativePath":"note/NodeJs/npm/03-npm login、npm publish失败总结.md","filePath":"note/NodeJs/npm/03-npm login、npm publish失败总结.md","lastUpdated":1757744560000}'),p={name:"note/NodeJs/npm/03-npm login、npm publish失败总结.md"};function l(t,s,h,r,o,d){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="npm-login-publish-失败问题总结与解决方案" tabindex="-1">npm login/publish 失败问题总结与解决方案 <a class="header-anchor" href="#npm-login-publish-失败问题总结与解决方案" aria-label="Permalink to &quot;npm login/publish 失败问题总结与解决方案&quot;">​</a></h1><p>在使用 npm 发布包或登录时，经常会遇到各种错误（如权限不足、源配置错误、包名冲突等）。本文总结常见问题及对应解决方案。</p><h2 id="一、登录失败-npm-login-无响应或报错" tabindex="-1">一、登录失败（<code>npm login</code> 无响应或报错） <a class="header-anchor" href="#一、登录失败-npm-login-无响应或报错" aria-label="Permalink to &quot;一、登录失败（\`npm login\` 无响应或报错）&quot;">​</a></h2><h3 id="_1-检查-npm-源是否为官方源" tabindex="-1">1. 检查 npm 源是否为官方源 <a class="header-anchor" href="#_1-检查-npm-源是否为官方源" aria-label="Permalink to &quot;1. 检查 npm 源是否为官方源&quot;">​</a></h3><p>npm 登录需连接官方 registry（<code>https://registry.npmjs.org/</code>），若使用镜像源（如淘宝源 <code>https://registry.npm.taobao.org/</code>）会导致登录失败。</p><p><strong>查看当前源</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>切换为官方源</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.npmjs.org/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-清除代理配置-可选" tabindex="-1">2. 清除代理配置（可选） <a class="header-anchor" href="#_2-清除代理配置-可选" aria-label="Permalink to &quot;2. 清除代理配置（可选）&quot;">​</a></h3><p>若处于代理环境下，可能影响网络连接。</p><p><strong>清除代理</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> null</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https-proxy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> null</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-验证-npm-账户状态" tabindex="-1">3. 验证 npm 账户状态 <a class="header-anchor" href="#_3-验证-npm-账户状态" aria-label="Permalink to &quot;3. 验证 npm 账户状态&quot;">​</a></h3><p>确保在 <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npmjs.com</a> 上的账户已激活，且邮箱验证通过。</p><h2 id="二、发布失败-npm-publish-报错" tabindex="-1">二、发布失败（<code>npm publish</code> 报错） <a class="header-anchor" href="#二、发布失败-npm-publish-报错" aria-label="Permalink to &quot;二、发布失败（\`npm publish\` 报错）&quot;">​</a></h2><h3 id="_1-错误码-e403-权限或包名问题" tabindex="-1">1. 错误码 <code>E403</code>：权限或包名问题 <a class="header-anchor" href="#_1-错误码-e403-权限或包名问题" aria-label="Permalink to &quot;1. 错误码 \`E403\`：权限或包名问题&quot;">​</a></h3><p>最常见的发布错误，原因及解决方案：</p><h4 id="_1-包名已被占用" tabindex="-1">（1）包名已被占用 <a class="header-anchor" href="#_1-包名已被占用" aria-label="Permalink to &quot;（1）包名已被占用&quot;">​</a></h4><p><code>package.json</code> 中的 <code>name</code> 字段需<strong>全局唯一</strong>。</p><ul><li>检查包名：在 <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npmjs.com</a> 搜索包名，确认是否已存在。</li><li>解决方案：修改 <code>package.json</code> 的 <code>name</code> 为新名称，再尝试发布。</li></ul><p>示例 <code>package.json</code>：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-unique-package-name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...其他配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_2-登录用户与包归属不一致" tabindex="-1">（2）登录用户与包归属不一致 <a class="header-anchor" href="#_2-登录用户与包归属不一致" aria-label="Permalink to &quot;（2）登录用户与包归属不一致&quot;">​</a></h4><p>需确保执行 <code>npm publish</code> 的用户，是包的所有者（或有权限的 collaborator）。</p><ul><li>验证当前登录用户：<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> whoami</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li>若用户错误，重新登录：<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><h4 id="_3-版本号未递增" tabindex="-1">（3）版本号未递增 <a class="header-anchor" href="#_3-版本号未递增" aria-label="Permalink to &quot;（3）版本号未递增&quot;">​</a></h4><p>npm 要求每次发布的 <code>version</code> 必须<strong>高于历史版本</strong>（遵循语义化版本规范）。</p><ul><li>检查 <code>package.json</code> 的 <code>version</code> 字段，确保版本号递增（如从 <code>1.0.0</code> 改为 <code>1.0.1</code>）。</li></ul><h3 id="_2-错误码-e400-配置无效" tabindex="-1">2. 错误码 <code>E400</code>：配置无效 <a class="header-anchor" href="#_2-错误码-e400-配置无效" aria-label="Permalink to &quot;2. 错误码 \`E400\`：配置无效&quot;">​</a></h3><p>常见原因是 <code>package.json</code> 缺少必要字段（如 <code>name</code>、<code>version</code>）。</p><p><strong>确保 <code>package.json</code> 包含核心字段</strong>：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-package&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 入口文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist/**/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 指定要发布的文件（可选，推荐）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;license&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MIT&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_3-发布私有包-需付费" tabindex="-1">3. 发布私有包（需付费） <a class="header-anchor" href="#_3-发布私有包-需付费" aria-label="Permalink to &quot;3. 发布私有包（需付费）&quot;">​</a></h3><p>若需发布<strong>私有包</strong>，需订阅 npm 的付费计划，并在发布时添加 <code>--access private</code>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --access</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> private</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>（免费账户仅能发布公共包，且包名需遵循命名规范）</p><h2 id="三、发布前本地验证" tabindex="-1">三、发布前本地验证 <a class="header-anchor" href="#三、发布前本地验证" aria-label="Permalink to &quot;三、发布前本地验证&quot;">​</a></h2><h3 id="_1-本地打包预览" tabindex="-1">1. 本地打包预览 <a class="header-anchor" href="#_1-本地打包预览" aria-label="Permalink to &quot;1. 本地打包预览&quot;">​</a></h3><p>通过 <code>npm pack</code> 生成 tarball 文件，模拟发布后的包结构：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pack</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行后会生成 <code>your-package-版本号.tgz</code> 文件，可解压查看包含的文件是否符合预期。</p><h3 id="_2-本地安装测试" tabindex="-1">2. 本地安装测试 <a class="header-anchor" href="#_2-本地安装测试" aria-label="Permalink to &quot;2. 本地安装测试&quot;">​</a></h3><p>将打包好的 tarball 安装到其他项目，验证功能：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 项目 A 中打包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pack</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 项目 B 中安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/your-package-版本号.tgz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="四、其他注意事项" tabindex="-1">四、其他注意事项 <a class="header-anchor" href="#四、其他注意事项" aria-label="Permalink to &quot;四、其他注意事项&quot;">​</a></h2><h3 id="_1-忽略不必要的文件" tabindex="-1">1. 忽略不必要的文件 <a class="header-anchor" href="#_1-忽略不必要的文件" aria-label="Permalink to &quot;1. 忽略不必要的文件&quot;">​</a></h3><p>使用 <code>.npmignore</code> 或 <code>package.json</code> 的 <code>files</code> 字段，排除测试文件、源码等无需发布的内容。</p><p>示例 <code>.npmignore</code>：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>test/</span></span>
<span class="line"><span>src/</span></span>
<span class="line"><span>*.log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-切换包管理工具-如-pnpm-yarn" tabindex="-1">2. 切换包管理工具（如 pnpm/yarn） <a class="header-anchor" href="#_2-切换包管理工具-如-pnpm-yarn" aria-label="Permalink to &quot;2. 切换包管理工具（如 pnpm/yarn）&quot;">​</a></h3><p>若 npm 本身存在问题，可尝试用其他包管理工具发布（需先登录对应 registry）。</p><p><strong>pnpm 发布示例</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-检查网络连接" tabindex="-1">3. 检查网络连接 <a class="header-anchor" href="#_3-检查网络连接" aria-label="Permalink to &quot;3. 检查网络连接&quot;">​</a></h3><p>确保网络可正常访问 <code>registry.npmjs.org</code>，可通过 ping 或浏览器访问验证。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>npm 登录/发布失败的核心排查步骤：</p><ol><li>验证 npm 源为官方源；</li><li>确认包名唯一、版本号递增；</li><li>检查 <code>package.json</code> 配置完整性；</li><li>本地打包验证文件结构；</li><li>确保网络与账户状态正常。</li></ol><p>通过以上步骤，可解决绝大多数 npm 发布相关的问题。</p>`,60)])])}const u=a(p,[["render",l]]);export{k as __pageData,u as default};
